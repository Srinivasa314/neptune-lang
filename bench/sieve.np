const {sqrt} = import("math")
fun sieve(primes) {
    const n = primes.len() - 1 
    const sqrt_n = sqrt(n).toInt()
    for p in 2..sqrt_n+1 {
        if primes[p] === true {
            let i = p * p
            while i <= n{
                primes[i] = false
                i += p
            }
        }
    }

    let count = 0
    for i in 2..n+1{
        if primes[i] === true{
            count+=1
        }
    }
    return count
}

let primes = new Array(5_000_001,true)

const {now} = import("time")
let time = now()
print(sieve(primes))
print((now()-time)*1000)